#: import BoxLayout_header smac_widgets.smac_layouts.BoxLayout_header
#: import BoxLayout_container smac_widgets.smac_layouts.BoxLayout_container
#: import SMAC_DEVICES smac_device_keys.SMAC_DEVICES

<Screen_espConfig>:
    back_screen: "Screen_network"
    BoxLayout:
        orientation: "vertical"
        BoxLayout_header:
            Image_iconButton:
                source: app.source_icon + 'LEFT.png'
                on_release:
                    app.change_screen(root.back_screen)
            Label:
                text: "Config Device"
                color: app.colors["COLOR_TEXT"]
                size_hint_y: None
                height: app.grid_min
            Image_iconButton:
                source: app.source_icon + 'CHECK.png'
                on_release:
                    root.update_config()
        ScrollView:
            size_hint_y: 1
            BoxLayout_container:
                id: id_config_container
                spacing: dp(10)
                Widget_block:
                    text: "Connect To Device"
                    BoxLayout:
                        size_hint: 1, None
                        height: app.grid_min
                        TextInput_custom:
                            hint_text: "IP address"
                            id: id_ip_address
                            text: "192.168.43.123"
                        Button_custom1:
                            text: 'Connect'
                            on_release:
                                root.connect_esp(id_ip_address.text)
                #Widget_block:
                #    text: "Scanning..."
                #    height: self.minimum_height
                #    id: id_config_state_text
                #    BoxLayout_container:
                #        size_hint: 1, None
                #        height: self.minimum_height
                #        orientation: 'vertical'
                #        id: id_scan_container
                BoxLayout_container:
                    size_hint: 1, None
                    height: self.minimum_height
                    orientation: 'vertical'
                    id: id_esp_config_container


<Screen_network>:
    back_screen: None
    FloatLayout:
        BoxLayout:
            orientation: "vertical"
            BoxLayout_header:
                Image_iconButton:
                    source: app.source_icon + 'HOME.png'
                    on_release:
                        root.open_close_menu()
                Label:
                    text: app.APP_DATA["name_home"]
                    color: app.colors["COLOR_TEXT"]
                    size_hint_y: None
                    height: app.grid_min
                Image_iconButton:
                    source: app.source_icon + 'CLOUD.png'
                    on_release:
                        #app.APP_DATA["id_topic"] =
                        app.change_screen("Screen_context")
                #Button:
                #    id: id_btn
                #	text: "SEND INFO"
                #	on_release:
                #		app.send_info()

            ScrollView:
                size_hint_y: 1
                BoxLayout_container:
                    id: id_network_container
                    spacing: dp(10)
        #BoxLayout:
        #    size_hint_y: None
        #    height: app.grid_min
        #    canvas.before:
        #        Color:
        #            rgba: app.colors["COLOR_THEME_BASIC"]
        #        Rectangle:
        #            size: self.size
        #            pos: self.pos
        #    Widget_tab:
        #        source: app.source_icon + "HOME.png"
        #        text: "Homes"
        #        screen:  "Screen_network"
        #        on_release:
        #            app.change_screen("Screen_network")
        #    Widget_tab:
        #        source: app.source_icon + "CLOUD.png"
        #        text: "Context"
        #        screen: "Screen_context"
        #        on_release:
        #            app.change_screen("Screen_context")
        Widget_menuBG:
            id: id_menu_bg
            pos: self.pos
            size_hint: 0,1
            opacity:.5
            on_release:
                root.open_close_menu()
            canvas.before:
                Color:
                    rgba: app.colors["COLOR_MENU_BG"]
                Rectangle:
                    size: self.size
                    pos: self.pos
        ScrollView:
            size_hint: None, 1
            width: 0
            pos: 0,0
            id: id_menu_container
            canvas.before:
                Color:
                    rgba: app.colors["COLOR_THEME_BASIC"]
                Rectangle:
                    size: self.size
                    pos: self.pos
            #size_hint_y: 1
            BoxLayout_menu:
                id: id_menu
                padding: dp(0)
                spacing: dp(0)

                Label_menuItem2:
                    text: "Homes"
                    bg_color: app.colors["COLOR_THEME"]

                Label_menuItem:
                    text: "Local"
                    bg_color: app.colors["COLOR_THEME_BASIC_2"]
                    id_topic: ''
                    on_release:
                        #self.bg_color: get_color_from_hex("#c9c9c9")
                        root.on_menu_item_release(self)
                BoxLayout_container:
                    id: id_menu_home_container
                    padding: 0
                    spacing: dp(0)
                Label_menuItem2:
                    text: "Device"
                    bg_color: app.colors["COLOR_THEME"]
                Label_menuItem:
                    text: app.EMAIL
                Label_menuItem:
                    text: "Theme"
                    bg_color: app.colors["COLOR_THEME_BASIC_2"]
                    Widget_switch:
                        pos: self.parent.right - self.width - dp(10), self.parent.y
                        #value: 1 if(app.theme == "DARK") else 0
                        on_value:
                            app.theme = "LIGHT" if(app.theme=="DARK") else "DARK"
                Label_menuItem:
                    text: "Config Device"
                    on_release:
                        app.change_screen("Screen_espConfig")
                Label_menuItem:
                    text: "Log out"
                    on_release:
                        app.logout()


<Screen_context>:
    back_screen: "Screen_network"
    BoxLayout:
		orientation: "vertical"
		BoxLayout_header:
		    Image_iconButton:
		        source: app.source_icon + "LEFT.png"
		        on_release:
		            app.change_screen("Screen_network")
			Label:
				text: "Contexts"
				color: app.colors["COLOR_TEXT"]
            Image_iconButton:
                source: app.source_icon + "PLUS.png"
                on_release:
                    root.open_add_context()
		ScrollView:
			size_hint_y: 1
			BoxLayout_container:
			    id: id_context_container


<Screen_deviceSetting>:
    back_screen: "Screen_network"
    BoxLayout:
		orientation: "vertical"
		BoxLayout_header:
		    Image_iconButton:
		        source: app.source_icon + "LEFT.png"
		        on_release:
		            app.change_screen("Screen_network")
			Label:
				text: root.name
				color: app.colors["COLOR_TEXT"]
		ScrollView:
			size_hint_y: 1
			BoxLayout_container:
				spacing: dp(5)
				padding: dp(5)
				id: id_container
				Widget_block:
				    text: "Device ID: {}".format(app.APP_DATA["id_device"])
				Widget_block:
				    text: "Device Name"
                    BoxLayout:
				        size_hint: 1, None
				        height: app.grid_min
				        TextInput_custom:
                            hint_text: "Device Name"
                            id: id_name_device
                            text: app.APP_DATA["name_device"]
                            #disabled: 1 if(app.APP_DATA["id_device"] != app.ID_DEVICE) else 0
                        Button_custom1:
                            text: 'Update Name'
                            #disabled: 1 if(app.APP_DATA["id_device"] != app.ID_DEVICE) else 0
                            on_release:
                                root.update_device_name(app.APP_DATA["id_device"], id_name_device.text)
				Widget_block:
				    text: "Add device to a Home"
				    size_hint_y: None
				    height: self.minimum_height
				    orientation: 'vertical'
				    spacing: dp(2)
				    BoxLayout_container:
				        size_hint: 1, None
				        height: self.minimum_height
				        orientation: 'vertical'
                        id: id_topic_container


                    #Dropdown_custom:
                    #    text: "select Home"
                    #    id: id_dropdown_home_container
                    #    height: app.grid_min
                    #Dropdown_custom:
                    #    text: "select Room"
                    #    id: id_dropdown_room_container
                    #    height: app.grid_min

                    #Button_custom1:
                    #    text: 'Add Device'
                    #    on_release:
                    #        root.subscribe_topic(id_dropdown_home_container, id_dropdown_room_container)
                            #app.send_req_delete_topic(id_ip_topic.text, id_ip_device.text, id_ip_passkey.text)
                            #app.send_req_add_topic(id_ip_topic.text, id_ip_device.text, id_ip_passkey.text)
                #Widget_block:
				#    text: "Create a Home"
                #    BoxLayout:
				#        size_hint: 1, None
				#        height: app.grid_min
                #        TextInput_custom:
                #            hint_text: "Home"
                #            id: id_name_home
                #        TextInput_custom:
                #            hint_text: "Room"
                #            id: id_name_room
                #        Button_custom1:
                #            text: 'add home'
                #            on_release:
                #                root.add_home(id_name_home.text, id_name_room.text)
                Widget_block:
				    text: "Remove this device from a Home"
                    BoxLayout_container:
				        id: id_device_container
                Widget_block:
				    text: "Update Passkey of the device"
                    BoxLayout:
				        size_hint: 1, None
				        height: app.grid_min
				        TextInput_custom:
                            hint_text: "PIN"
                            id: id_passkey
                            password: True
                        Button_custom1:
                            text: 'Update PIN'
                            on_release:
                                root.update_device_pin(app.APP_DATA["id_device"], id_passkey.text)
                Widget_block:
				    text: "Update Online Interval of the device"
                    BoxLayout:
				        size_hint: 1, None
				        height: app.grid_min
				        TextInput_custom:
                            hint_text: "Interval"
                            id: id_interval_online
                            text: str(root.data["interval_online"])
                            #cursor: 0,0
                            #password: True
                        Button_custom1:
                            text: 'Update Interval'
                            on_release:
                                root.update_device_interval_online(app.APP_DATA["id_device"], id_interval_online.text)


                #Widget_block:
				#    text: "Update Wifi Config"
				#    disabled: 0 if(str(app.APP_DATA["type_device"]) == SMAC_DEVICES["ESP"]) else 1
				#    height:  self.minimum_height


                #Widget_block:
				#    text: "Device Updates and Downloads"
				#    disabled: 0 if( str(app.APP_DATA["type_device"]) == SMAC_DEVICES["ESP"]) else 1
                #    BoxLayout:
                #        orientation: 'vertical'
				#        size_hint: 1, None
				#        height: self.minimum_height
                #        Button_custom1:
                #            text: 'Check for Updates and Download'
                #            width: app.grid_min * 4
                #            on_release:
                #                root.update_software(app.APP_DATA["id_device"])


<Screen_register>:
    back_screen: None


    ScrollView:
        BoxLayout_container:
            spacing: app.grid_min/5
            padding: app.grid_min, 0
            Widget:
                size_hint: 1, None
                height: app.grid_min
                Image:
                    source: 'smac_text.png'
                    size_hint: None, None
                    size: app.grid_min*2,  app.grid_min
                    center: self.parent.center
            Label_custom:
                size_hint_y: None
                height: app.grid_min * 2
                text: "LOGIN"
                bold: True
            TextInput_custom:
                hint_text: "Email/Mobile Number"
                size_hint_y: None
                height: app.grid_min
                id: id_text_email
                input_type: "mail"
                text: app.EMAIL if(app.EMAIL != "") else app.MOBILE_NUMBER
            TextInput_custom:
                hint_text: "PIN"
                size_hint_y: None
                height: app.grid_min
                id: id_text_email_pin
                input_type: "number"
            Button_custom1:
                text: "LOGIN"
                on_release:
                    root.verify_login_pin()
            Button_link:
                text: "Register/Forgot Password"
                on_release:
                    root.open_register_modal()


